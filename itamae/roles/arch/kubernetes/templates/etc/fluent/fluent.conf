## Monitor

<source>
  @id in-monitor_agent
  @type monitor_agent
  bind 127.0.0.1
  port 24220
</source>

<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

## Common

<source>
  @id in-forward
  @type forward
  bind 127.0.0.1
  port 24224
</source>

## kubernetes
# https://github.com/fluent/fluentd-kubernetes-daemonset

<source>
  @type tail
  @id in-tail-k8s
  path /var/log/containers/*.log
  pos_file /var/lib/fluentd/containers.log.pos
  tag "kubernetes.*"
  exclude_path ["/var/log/containers/coil-controllers-*", "/var/log/containers/coil-node-*", "/var/log/containers/calico-node-*", "/var/log/containers/speaker*metallb-system*"]
  read_from_head true
  <parse>
    @type json
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>

<filter kubernetes.**>
  @type kubernetes_metadata
  @id filter-k8s-metadata
  verify_ssl "true"
  ca_file "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
</filter>

<match kubernetes.**>
  @id k8s-raw-copy
  @type copy
  <store>
    @id k8s-raw-relabel-pt
    @type relabel
    @label @k8s-pt
  </store>
</match>

<label @k8s-pt>
  <filter kubernetes.**>
    @id filter-k8s-pt-transform
    @type record_transformer
    enable_ruby true
    <record>
      hostname ${record["kubernetes"]["namespace_name"]}/${record["kubernetes"]["pod_name"]}
      program ${record["kubernetes"]["labels"]&.values_at("nkmi.me/app", "app.kubernetes.io/name", "app", "k8s-app")&.find(&:itself) || "UNKNOWN"}/${record["kubernetes"]["container_name"]}
      severity info
      facility local0
      message ${record['log']}
    </record>
  </filter>

<%- if node[:kubernetes][:logging].fetch(:papertrail) -%>
  <match kubernetes.**>
    @id out-k8s-papertrail
    @type papertrail
    papertrail_host <%= node[:kubernetes][:logging].fetch(:papertrail_host) %>
    papertrail_port <%= node[:kubernetes][:logging].fetch(:papertrail_port) %>
    flush_interval 2
    retry_limit 5
  </match>
<%- end -%>
</label>

##
# Example:
# 2017-02-09T00:15:57.992775796Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" ip="104.132.1.72" method="GET" user="kubecfg" as="<self>" asgroups="<lookup>" namespace="default" uri="/api/v1/namespaces/default/pods"
# 2017-02-09T00:15:57.993528822Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" response="200"
# <source>
#   @type tail
#   @id in_tail_kube_apiserver_audit
#   multiline_flush_interval 5s
#   path /var/log/kubernetes/kube-apiserver-audit.log
#   pos_file /var/log/kube-apiserver-audit.log.pos
#   tag kube-apiserver-audit
#   <parse>
#     @type multiline
#     format_firstline /^\S+\s+AUDIT:/
#     # Fields must be explicitly captured by name to be parsed into the record.
#     # Fields may not always be present, and order may change, so this just looks
#     # for a list of key="\"quoted\" value" pairs separated by spaces.
#     # Unknown fields are ignored.
#     # Note: We can't separate query/response lines as format1/format2 because
#     #       they don't always come one after the other for a given query.
#     format1 /^(?<time>\S+) AUDIT:(?: (?:id="(?<id>(?:[^"\\]|\\.)*)"|ip="(?<ip>(?:[^"\\]|\\.)*)"|method="(?<method>(?:[^"\\]|\\.)*)"|user="(?<user>(?:[^"\\]|\\.)*)"|groups="(?<groups>(?:[^"\\]|\\.)*)"|as="(?<as>(?:[^"\\]|\\.)*)"|asgroups="(?<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?<namespace>(?:[^"\\]|\\.)*)"|uri="(?<uri>(?:[^"\\]|\\.)*)"|response="(?<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
#     time_format %Y-%m-%dT%T.%L%Z
#   </parse>
# </source>


